# 开发环境配置
# 使用方式: docker-compose -f docker-compose.dev.yml up

services:
  queqiao-arr-dev:
    build:
      context: .
      target: development
      dockerfile: Dockerfile
    container_name: queqiao-arr-dev
    image: queqiao-arr:dev
    ports:
      - "8000:8000"  # 后端 API
    environment:
      # 应用配置
      - APP_NAME=Queqiao-arr-Dev
      - VERSION=1.0.0-dev
      - DEBUG=true
      
      # 数据库配置
      - DATABASE_URL=sqlite+aiosqlite:///./runtime/data/queqiao.db

      # 安全配置
      - SECRET_KEY=${SECRET_KEY:?SECRET_KEY is not set}
      - ACCESS_TOKEN_EXPIRE_MINUTES=1440  # 开发环境24小时
      
      # CORS配置
      - ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000","http://localhost:8000","http://127.0.0.1:8000"]
      
      # 日志配置
      - LOG_LEVEL=DEBUG
      - LOG_FILE=/app/runtime/logs/queqiao-arr-dev.log
      
      # 缓存配置（开发环境缓存时间短）
      - CACHE_TTL=60
      - TMDB_CACHE_TTL=300
      
      # 请求配置
      - REQUEST_TIMEOUT=30
      - MAX_RETRIES=3
    volumes:
      # 挂载源码实现热重载
      - ./backend:/app
      - ./runtime/data:/app/runtime/data
      - ./runtime/logs:/app/runtime/logs
      # 排除Python缓存
      - /app/__pycache__
      - /app/app/__pycache__
    networks:
      - queqiao-dev-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]

  # 前端开发服务器（可选）
  frontend-dev:
    image: node:18-alpine
    container_name: queqiao-arr-frontend-dev
    working_dir: /app
    ports:
      - "3000:3000"  # 前端开发服务器
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_PROXY_TARGET=http://queqiao-arr-dev:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - queqiao-dev-network
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    profiles:
      - frontend  # 使用 --profile frontend 启动前端

networks:
  queqiao-dev-network:
    driver: bridge

